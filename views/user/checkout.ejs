<!DOCTYPE html>
<html lang="zxx" class="no-js">

<head>
    <!-- Mobile Specific Meta -->
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <!-- Favicon-->
    <link rel="shortcut icon" href="img/fav.png">
    <!-- Author Meta -->
    <meta name="author" content="CodePixar">
    <!-- Meta Description -->
    <meta name="description" content="">
    <!-- Meta Keyword -->
    <meta name="keywords" content="">
    <!-- meta character set -->
    <meta charset="UTF-8">
    <!-- Site Title -->
    <title>Karma Shop</title>

    <!--
            CSS
            ============================================= -->
    <link rel="stylesheet" href="css/linearicons.css">
    <link rel="stylesheet" href="css/owl.carousel.css">
    <link rel="stylesheet" href="css/themify-icons.css">
    <link rel="stylesheet" href="css/font-awesome.min.css">
    <link rel="stylesheet" href="css/nice-select.css">
    <link rel="stylesheet" href="css/nouislider.min.css">
    <link rel="stylesheet" href="css/bootstrap.css">
    <link rel="stylesheet" href="css/main.css">

    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
</head>

<body>

    <!-- Start Header Area -->
	<header class="header_area sticky-header">
		<div class="main_menu">
			<nav class="navbar navbar-expand-lg navbar-light main_box">
				<div class="container">
					<!-- Brand and toggle get grouped for better mobile display -->
					<a class="navbar-brand logo_h" href="index.html"><img src="img/logo.png" alt=""></a>
					<button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent"
					 aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
						<span class="icon-bar"></span>
						<span class="icon-bar"></span>
						<span class="icon-bar"></span>
					</button>
					<!-- Collect the nav links, forms, and other content for toggling -->
					<div class="collapse navbar-collapse offset" id="navbarSupportedContent">
						<ul class="nav navbar-nav menu_nav ml-auto">
							<li class="nav-item active"><a class="nav-link" href="/home">Home</a></li>
							<li class="nav-item"><a class="nav-link" href="/bookList">All Books</a></li>
							
							<!-- <li class="nav-item submenu dropdown">
								<a href="/product" class="nav-link dropdown-toggle"  role="button" aria-haspopup="true"
								 aria-expanded="false"></a> -->
								<!-- <ul class="dropdown-menu">
									<li class="nav-item"><a class="nav-link" href="category.html">Shop Category</a></li>
									<li class="nav-item"><a class="nav-link" href="single-product.html">Product Details</a></li>
									<li class="nav-item"><a class="nav-link" href="checkout.html">Product Checkout</a></li>
									<li class="nav-item"><a class="nav-link" href="cart.html">Shopping Cart</a></li>
									<li class="nav-item"><a class="nav-link" href="confirmation.html">Confirmation</a></li>
								</ul> -->
							<!-- </li> -->
							<li class="nav-item submenu dropdown">
								<a href="#" class="nav-link dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true"
								 aria-expanded="false">Blog</a>
								<ul class="dropdown-menu">
									<li class="nav-item"><a class="nav-link" href="blog.html">Blog</a></li>
									<li class="nav-item"><a class="nav-link" href="single-blog.html">Blog Details</a></li>
								</ul>
							</li>
							<li class="nav-item submenu dropdown">
								<a href="#" class="nav-link dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true"
								 aria-expanded="false">Pages</a>
								<ul class="dropdown-menu">
									<li class="nav-item"><a class="nav-link" href="login.html">Login</a></li>
									<li class="nav-item"><a class="nav-link" href="tracking.html">Tracking</a></li>
									<li class="nav-item"><a class="nav-link" href="elements.html">Elements</a></li>
								</ul>
							</li>
							<li class="nav-item"><a class="nav-link" href="/account">Account</a></li>
							<li class="nav-item"><a class="nav-link" href="/logout">Logout</a></li>
                            <li class="nav-item "><a class="nav-link" href="/account" ><i class="fas fa-user"></i><%=user.name%></a></li>

						</ul>
						<ul class="nav navbar-nav navbar-right">
							<li class="nav-item"><a href="/cart" class="cart"><span class="ti-bag"></span></a></li>
							<li class="nav-item">
								<button class="search"><span class="lnr lnr-magnifier" id="search"></span></button>
							</li>
						</ul>
					</div>
				</div>
			</nav>
		</div>
		<div class="search_input" id="search_input_box">
			<div class="container">
				<form class="d-flex justify-content-between">
					<input type="text" class="form-control" id="search_input" placeholder="Search Here">
					<button type="submit" class="btn"></button>
					<span class="lnr lnr-cross" id="close_search" title="Close Search"></span>
				</form>
			</div>
		</div>
	</header>
	<!-- End Header Area -->

    <!-- Start Banner Area -->
    <section class="banner-area organic-breadcrumb">
        <div class="container">
            <div class="breadcrumb-banner d-flex flex-wrap align-items-center justify-content-end">
                <div class="col-first">
                    <h1>Checkout</h1>
                    <nav class="d-flex align-items-center">
                        <a href="index.html">Home<span class="lnr lnr-arrow-right"></span></a>
                        <a href="single-product.html">Checkout</a>
                    </nav>
                </div>
            </div>
        </div>
    </section>
    <!-- End Banner Area -->

    <!--================Checkout Area =================-->
    <section class="checkout_area section_gap">
        <div class="container">
            <div class="cupon_area">
                <!-- HTML structure -->
<!-- HTML structure -->
<!-- HTML structure using Bootstrap classes -->
<!-- HTML structure using Bootstrap classes -->
<div class="check_title" id="couponTitle">
    <h2><button id="showModal" class="btn btn-warning">Coupons</button></h2>
</div>

<!-- Modal Structure -->
<div class="modal" id="blankModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <!-- Modal Header -->
            <div class="modal-header">
                <h5 class="modal-title">Coupons</h5>
                <button type="button" class="close" id="closeModal">&times;</button>
            </div>
            <div class="modal-body">
                <% if(couponData && couponData.length > 0) { %>
                  <% for (let i = 0; i < couponData.length; i++) { %>
                    <div class="coupon-item">
                      <input type="text" value="<%= couponData[i].couponCode %>" readonly class="coupon-code">
                    </div>
                  <% } %>
                <% } %>
              </div>              
            <style>
     /* Example styles for the coupon items */
.coupon-item {
  display: flex;
  align-items: center;
  margin-bottom: 2px;
}

.coupon-code {
  padding: 8px;
  border: 1px solid #ccc;
  border-radius: 4px;
  margin-right: 10px;
}

.apply-button {
  padding: 8px 12px;
  background-color: #4caf50;
  color: white;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  transition: background-color 0.3s;
}

.apply-button:hover {
  background-color: #45a049;
}

            </style>              
        </div>
    </div>
</div>
<style>
    .fixed-box {
    /* Styling for the rectangular box */
    background-color: #fff; /* Background color of the box */
    border: 1px solid rgb(5, 5, 5); /* Border around the box */
    padding: 5px 10px; /* Padding inside the box */
    display: inline-block; /* Ensure the box size fits the content */
    margin-left: 10px; /* Adjust the margin for positioning */
}
</style>
<script>
   // JavaScript
document.addEventListener("DOMContentLoaded", function() {
    const showModalButton = document.getElementById("showModal");
    const blankModal = document.getElementById("blankModal");
    const closeModalButton = document.getElementById("closeModal");

    showModalButton.addEventListener("click", function(event) {
        event.preventDefault(); // Prevent the default action of the button
        blankModal.style.display = "block"; // Show the blank modal
    });

    closeModalButton.addEventListener("click", function() {
        blankModal.style.display = "none"; // Hide the modal
    });
});

</script>
            


<input type="text" id="couponInput" placeholder="Enter coupon code">
<button class="tp_btn" onclick="applyCoupon()">Apply Coupon</button>


            </div>
            <div class="billing_details">
                <div class="row">
                    <div class="col-lg-8">
                        <h3>Billing Details</h3>
                        <div class="payment-options">
                            <% const maxAddressesToShow = 2; %>
<% if (userData && userData.address && userData.address.length > 0) { %>
    <% for (let i = userData.address.length - 1; i >= 0 && i >= userData.address.length - maxAddressesToShow; i--) { %>
        <form id="addressForm<%= i %>" class="<%= i >= maxAddressesToShow ? 'hidden' : '' %>">
            <input type="hidden" id="userId<%= i %>" value="<%= i %>">
            <div class="payment-options">
                <label class="payment-item" for="f-option<%= i %>">
                    <input type="radio" id="f-option<%= i %>" name="payment" value="<%= i %>" <%= i === userData.address.length - 1 ? 'checked' : '' %>>
                    <div class="box">
                        <div class="circle"></div>
                        <div class="address-details">
                            <input type="hidden" value="<%= i %>">
                            <h6 class="mr-5">Address <%= i + 1 %>:</h6>
                            <p><%= userData.address[i].firstName %>,</p>
                            <p><%= userData.address[i].City %>,</p>
                            <p><%= userData.address[i].District %>,</p>
                            <p><%= userData.address[i].State %>,</p>
                            <p><%= userData.address[i].Pincode %>,</p>
                            <div class="d-flex justify-content-end align-items-end">
                            <p class="mb-0"><a href="/editAddress?index=<%=i%>" >Edit</a></p>
                            </div>
                        </div>
                    </div>
                </label>
            </div>
        </form>
    <% } %>
<% } else { %>
    
<% } %>
                            
                            
                            
                            
                            
                            
                            <script>
                                document.getElementById('showAllAddressesButton').addEventListener('click', function() {
                                    const hiddenForms = document.querySelectorAll('.hidden');
                                    hiddenForms.forEach(form => {
                                        form.classList.remove('hidden');
                                    });
                                    this.style.display = 'none';
                                });
                            </script>
                            
                            
                            
                            
                            <script>
                                const radioButtons = document.querySelectorAll('input[type="radio"][name="payment"]');
                                radioButtons.forEach(radioButton => {
                                    radioButton.addEventListener('change', (event) => {
                                        if (event.target.checked) {
                                            radioButtons.forEach(rb => {
                                                if (rb !== event.target) {
                                                    rb.checked = false;
                                                }
                                            });
                                        }
                                    });
                                });
                            </script>
                            
                            
                          </div>
                          <script>
                            document.addEventListener('DOMContentLoaded', () => {
                                const forms = document.querySelectorAll('[id^="addressForm"]');
                                forms.forEach(form => {
                                    form.addEventListener('submit', event => {
                                        event.preventDefault();
                                        const selectedAddressIndex = form.querySelector('input[name="payment"]:checked').value;
                                        console.log("Selected Address Index:", selectedAddressIndex);
                                        // Use AJAX or other methods to send the selected address data
                                    });
                                });
                            });
                        </script>
                        
                        
                        
                        
                        
                        <button id="toggleFormButton" class="btn btn-warning mt-5" data-bs-toggle="modal" data-bs-target="#exampleModal">Add address</button>

                        <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
                            <div class="modal-dialog">
                                <div class="modal-content">
                                    <div class="modal-body">
                                        <form class="contact_form" id="myForm" action="/checkout" method="POST" onsubmit="return validateForm()">
                                            <div class="mb-3">
                                                <label for="first"  class="form-label">First name</label>
                                                <input type="text"  class="form-control" id="first" name="fname" >
                                                <span id="firstError" class="text-danger"></span>
                                            </div>
                                            <div class="mb-3">
                                                <label for="last" class="form-label">Last name</label>
                                                <input type="text" class="form-control" id="last" name="lname" >
                                                <span id="lastError" class="text-danger"></span>
                                            </div>
                                            <div class="mb-3">
                                                <label for="city" class="form-label">City/Town</label>
                                                <input type="text" class="form-control" id="city" name="city" >
                                                <span id="cityError" class="text-danger"></span>
                                            </div>
                                            <div class="mb-3">
                                                <label for="district" class="form-label">District</label>
                                                <input type="text" class="form-control" id="district" name="district" >
                                                <span id="districtError" class="text-danger"></span>
                                            </div>
                                            <div class="mb-3">
                                                <label for="state" class="form-label">State</label>
                                                <input type="text" class="form-control" id="state" name="state" >
                                                <span id="stateError" class="text-danger"></span>
                                            </div>
                                            <div class="mb-3">
                                                <label for="pincode" class="form-label">Pincode</label>
                                                <input type="text" class="form-control" id="zip" name="pincode" >
                                                <span id="pincodeError" class="text-danger"></span>
                                            </div>
                                            <div class="mb-3">
                                                <button type="submit" class="btn btn-warning">Submit</button>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <script>
                            document.getElementById('toggleFormButton').addEventListener('click', function() {
                                const modal = new bootstrap.Modal(document.getElementById('exampleModal'));
                                modal.toggle();
                            });
                    
                            function validateForm() {
                                const firstName = document.getElementById('first').value;
                                const lastName = document.getElementById('last').value;
                                const city = document.getElementById('city').value;
                                const district = document.getElementById('district').value;
                                const state = document.getElementById('state').value;
                                const pincode = document.getElementById('zip').value;
                    
                                const nameRegex = /^[A-Za-z]+$/;
                                const pincodeRegex = /^\d{6}$/;
                    
                                if (!nameRegex.test(firstName)) {
                                    showError('firstError', 'First name should contain only letters');
                                    return false;
                                } else {
                                    hideError('firstError');
                                }
                    
                                if (!nameRegex.test(lastName)) {
                                    showError('lastError', 'Last name should contain only letters');
                                    return false;
                                } else {
                                    hideError('lastError');
                                }
                    
                                // Validation for city, district, state, and pincode
                                // Add similar checks using regular expressions and conditions
                    
                                if (!nameRegex.test(city)) {
                                    showError('cityError', 'City should contain only letters');
                                    return false;
                                } else {
                                    hideError('cityError');
                                }
                    
                                if (!nameRegex.test(district)) {
                                    showError('districtError', 'District should contain only letters');
                                    return false;
                                } else {
                                    hideError('districtError');
                                }
                    
                                if (!nameRegex.test(state)) {
                                    showError('stateError', 'State should contain only letters');
                                    return false;
                                } else {
                                    hideError('stateError');
                                }
                    
                                if (!pincodeRegex.test(pincode)) {
                                    showError('pincodeError', 'Pincode should be a 6-digit number');
                                    return false;
                                } else {
                                    hideError('pincodeError');
                                }
                    
                                return true; // Form submits if all validations pass
                            }
                    
                            function showError(id, message) {
                                const errorElement = document.getElementById(id);
                                errorElement.innerText = message;
                                errorElement.classList.add('error-message'); // Add the error class
                            }
                    
                            function hideError(id) {
                                const errorElement = document.getElementById(id);
                                errorElement.innerText = '';
                                errorElement.classList.remove('error-message'); // Remove the error class
                            }
                        </script>
                    
                        <style>
                            .error-message {
                                color: red;
                            }
                        </style>
                    
                        




                        </script>
                    <style>
                     .payment-options {
                            display: flex;
                            flex-wrap: wrap;
                            gap: 20px;
                            justify-content: center;
                            }

                            .payment-item {
                            width: 250px; 
                            text-align: center;
                            }

                            .box {
                            width: 100%;
                            height: 100%; 
                            border: 1px solid #ccc;
                            padding: 10px;
                            display: flex;
                            justify-content: center;
                            align-items: center;
                            }

                            .address-info {
                            width: 100%;
                            text-align: center;
                            }


                        </style>
                    </div>
                    <div class="col-lg-4">
                        <div class="order_box">
                            <h2>Your Order</h2>
                            <ul class="list">
                                <li><a href="#">Product <span>Total</span></a></li>
                                <% if(cartData && cartData.product && cartData.product.length > 0) { %>
                                    <% cartData.product.forEach(productItem => { %>
                                        <li class="cart-item">
                                            <a href="#" class="cart-link">
                                                <div class="product-details">
                                                    <div class="details">
                                                    <img src="/productimages/<%= productItem.productId.Image[0] %>" width="50px" height="50px" alt="">
                                                        <span class="price last " id="tPrice_<%= productItem.productId._id %>">₹<%= productItem.productId.salePrice * productItem.Quantity %>.00</span>
                                                        <span class="middle quantity  ">x<%= productItem.Quantity %></span>
                                                    </div>
                                                </div>
                                            </a>
                                        </li>
                                    <% }); %>
                                <% } else{%>
                                   
                                    <%}%>
                                
                                        <style>.cart-item {
                                            /* Your cart item styles */
                                            margin-bottom: 10px; /* Adjust the spacing between items */
                                        }
                                        
                                        .cart-link {
                                            /* Your link styles */
                                            display: block;
                                            text-decoration: none;
                                            /* Other styles */
                                        }
                                        
                                        .product-name {
                                            /* Styles for the product name */
                                            font-weight: bold;
                                        }
                                        
                                        .product-details {
                                            /* Styles for the quantity and price */
                                            color: #777; /* Adjust the color */
                                            font-size: 14px; /* Adjust the font size */
                                        }
                                        </style>
                                
                                
                            </ul>
                            <ul class="list list_2">
                                <li><span id="coupondata" style="display: none;"></span></li>
                                <li><a href="#">Coupon <span id="couponValue">-0</span></a></li>
                                <li><a href="#">Shipping <span>Free</span></a></li>
                                <li id="fullTotal"><a href="#">Total <span id="totalSum"></span></a></li>
                                <li>
                                    <button id="removeCouponBtn" style="display: none; background-color: red; border: none;" onclick="removeAppliedCoupon()">Remove</button>
                                </li>
                            </ul>
                            
                            <script>
                                // Calculate total sum of all 'tPrice' elements
                                function calculateTotalSum() {
                                    const tPriceElements = document.querySelectorAll('[id^="tPrice_"]');
                                    let totalSum = 0;
                                    tPriceElements.forEach(element => {
                                        const priceText = element.textContent.replace('₹', ''); // Remove '$' from text
                                        const price = parseFloat(priceText); // Convert text to number
                                        totalSum += price;
                                    });
                                    return totalSum.toFixed(2); 
                                }
                            
                                function displayTotalSum(total) {
                                const totalSumElement = document.getElementById('totalSum');
                                if (totalSumElement) {
                                    totalSumElement.textContent = total;
                                }
                                }
                                function checkCouponData() {
    const storedCouponCode = localStorage.getItem('couponCode');
    const couponDataElement = document.getElementById('coupondata');
    if (storedCouponCode && couponDataElement) {
        couponDataElement.textContent = storedCouponCode;
    }
}

checkCouponData();

function removeAppliedCoupon() {
    const storedCouponCode = localStorage.getItem('couponCode');

    if (storedCouponCode) {
        localStorage.removeItem('couponCode'); 
        localStorage.removeItem('couponValue'); 

        const couponValueElement = document.getElementById('couponValue');
        if (couponValueElement) {
            couponValueElement.textContent = '';
        }

        const couponDataElement = document.getElementById('coupondata');
        if (couponDataElement) {
            couponDataElement.textContent = ''; 
        }

        const initialTotalAmount = calculateTotalSum(); 
        displayTotalSum(initialTotalAmount);


        Swal.fire({
            title: 'Coupon Removed!',
            text: 'The applied coupon has been removed.',
            icon: 'success',
            showCancelButton: false,
            confirmButtonText: 'OK'
        }).then((result) => {
            if (result.isConfirmed) {
                location.reload(); 
            }
        });
    }
}

function displayRemoveCouponButton() {
    const storedCouponValue = localStorage.getItem('couponValue');
    const removeCouponBtn = document.getElementById('removeCouponBtn');
    if (storedCouponValue && removeCouponBtn) {
        removeCouponBtn.style.display = 'inline-block';
    } else {
        removeCouponBtn.style.display = 'none';
    }
}

displayRemoveCouponButton();

                           
    function applyCoupon() {
    const couponCode = document.getElementById('couponInput').value;
    let totalAmount = parseFloat(calculateTotalSum());

    fetch('/applycoupon', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({ 
            couponcode: couponCode,
            totalAmount: totalAmount
        }),
    })
    .then(response => {
        if (response.status === 200) {
            return response.json();
        } else {
            throw new Error('Network response was not ok');
        }
    })
    .then(data => {
        if (data.message === 'Success') {
            const couponValueElement = document.getElementById('couponValue');
            if (couponValueElement) {
                couponValueElement.textContent = `-${data.Discount}`;
            }

            const couponDataElement = document.getElementById('coupondata');
            if (couponDataElement) {
                couponDataElement.textContent = couponCode; 
            }

            totalAmount -= data.Discount; 
            displayTotalSum(totalAmount.toFixed(2)); 
            displayRemoveCouponButton();

            Swal.fire({
                title: 'Success!',
                text: 'Coupon applied successfully!',
                icon: 'success',
                showCancelButton: false,
                confirmButtonText: 'OK'
            }).then((result) => {
                if (result.isConfirmed) {
                    location.reload();
                }
            });

            localStorage.setItem('couponValue', data.Discount);
            localStorage.setItem('totalAmount', totalAmount.toFixed(2));
            localStorage.setItem('couponCode', couponCode); 
        } else {
            Swal.fire('Error!', data.message || 'Failed to apply coupon.', 'error');
        }
    })
    .catch(error => {
        console.error('Error:', error);
        Swal.fire('Error!', 'Coupon is not applicable for this product or Coupon limit exceeded.', 'error');
    });
}
    const storedCouponValue = localStorage.getItem('couponValue');
    const storedTotalAmount = localStorage.getItem('totalAmount');
    if (storedCouponValue && storedTotalAmount) {
        const couponValueElement = document.getElementById('couponValue');
        if (couponValueElement) {
            couponValueElement.textContent = `-${storedCouponValue}`;
        }
        displayTotalSum(storedTotalAmount);
    } else {
        displayTotalSum(calculateTotalSum());
    }
</script>
                           
                            
                            <div class="payment_item">
                                <div class="radion_btn">
                                    <input type="radio" id="f-option5" name="pay" value="wallet" checked>
                                    <label for="f-option5">Wallet</label>
                                    <div class="check"></div>
                                </div>
                            </div>
                            <div class="payment_item active">
                                <div class="radion_btn">
                                    <input type="radio" id="f-option6" name="pay" value="Cash on delevery">
                                    <label for="f-option6">Cash on delivery</label>
                                    <div class="check"></div>
                                </div>
                            </div>
                            <div class="payment_item active">
                                <div class="radion_btn">
                                    <input type="radio" id="f-option7" name="pay" value="paypal">
                                    <label for="f-option7">online</label>
                                    <div class="check"></div>
                                </div>
                            </div>
                            
                            
                            
                            
                            <button id="proceedToPayButton" class="btn">
                                <% if (cartData && cartData.product && cartData.product.length > 0) { %>
                                    <a class="btn primary-btn text-decoration-none" href="#" id="proceedToPaypal">Proceed to Pay</a>
                                <% } else { %>
                                    <button class="btn primary-btn disabled" disabled>Proceed to Pay</button>
                                <% } %>
                            </button>
                    </div>
                </div>
            </div>
        </div>
    </section>
    

    
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>

<script>
    document.getElementById('proceedToPayButton').addEventListener('click', function(event) {
        const selectedAddressIndex = document.querySelector('input[name="payment"]:checked');
        console.log("In ejs");
        if (!selectedAddressIndex) {
            Swal.fire({
                title: 'No Address Selected',
                text: 'Please select an address to proceed.',
                icon: 'warning',
                confirmButtonText: 'OK'
            });
            return;
        }

        const userId = document.getElementById(`userId${selectedAddressIndex.value}`).value;
        const paymentMethod = document.querySelector('input[name="pay"]:checked').value;
        const totalSumElement = document.getElementById('totalSum');
        const totalAmount = parseFloat(totalSumElement.textContent);
        Swal.fire({
            title: 'Are you sure you want to proceed?',
            text: `Total amount: $${totalAmount}. Payment method: ${paymentMethod}`,
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Proceed',
            cancelButtonText: 'Cancel'
        }).then((result) => {
            if (result.isConfirmed) {
                console.log("In razor");
                let rzp1;
            function initiatePayment(orderId, paymentStatus) {             
                // console.log(localStorage.getItem('totalAfterCouponApply'))
                let order = JSON.stringify(orderId);
                console.log(order);
                var options = {
                    "key": "rzp_test_C2ySOsHK5SbjQ0",
                    "amount": Math.ceil(order.amount),
                    "currency": "INR",
                    "name": "Companion Bags",
                    "description": "Test Transaction",
                    "order_id": orderId.id,
                    "handler": function (response) {
                        console.log("Finall");
                        afterPaymentSuccess();
                    },
                    "theme": {
                        "color": "#3399cc"
                    }
                };

                rzp1 = new Razorpay(options);

                rzp1.on('payment.failed', function (response) {
                    console.log("fail");
                    alert(response.error.code);
                    alert(response.error.description);
                    alert(response.error.source);
                    alert(response.error.step);
                    alert(response.error.reason);
                    alert(response.error.metadata.order_id);
                    alert(response.error.metadata.payment_id);
                    window.location.reload();
                });

                rzp1.open();
            }
            if(paymentMethod === 'paypal') { 

                const requestOptions = {
                        method: "POST",
                        headers: {
                            "Content-Type": "application/json"
                        },
                        body: JSON.stringify({
                            amount: totalAmount
                        })
                    };

                    fetch('/onlinepayment', requestOptions)
                        .then(response => {
                            if (!response.ok) {
                                throw new Error(`HTTP error! Status: ${response.status}`);
                            }else{
                                console.log("Response issue");
                                return response.json();

                            }
                            
                        })
                        .then(data => {
                            if(data.message == 'Order placed successfully.'){
                                console.log(data.razorOrderId)
                                const orderId = data.razorOrderId;
                                const paymentStatus = data.paymentStatus;
                                initiatePayment(orderId, paymentStatus);
                            }else{
                                Swal.fire({
                                title: 'Error!',
                                html: `<p>The book <strong>${data.product}</strong> is out of stock.</p>`,
                                icon: 'error',
                                confirmButtonText: 'OK'
                                });
                            }
                            
                        })
                        .catch(error => {
                            console.error("Fetch error:", error);
                        });
                    }else if(paymentMethod === 'wallet'){
                        const walletOption = {
                        method: "POST",
                        headers: {
                            "Content-Type": "application/json"
                        },
                        body: JSON.stringify({
                            amount: totalAmount
                        })
                    };

                    fetch('/walletpayment', walletOption)
                        .then(response => {
                            return response.json()
                            
                        }).then(data=>{
                            if(data.message=="success"){
                                afterPaymentSuccess()
                            }else if(data.message=="failed"){
                                Swal.fire({
                                 title: 'Insufficient Wallet Balance',
                                text: 'You do not have enough money in your wallet.',
                                icon: 'error',
                                confirmButtonText: 'OK'
                            })
                            }else{
                                Swal.fire({
                                title: 'Error!',
                                html: `<p>The book <strong>${data.product}</strong> is out of stock.</p>`,
                                icon: 'error',
                                confirmButtonText: 'OK'
                            });
                            }
                        })
                        
                        .catch(error => {
                            console.log(error);
                        });
                    }else if(paymentMethod === 'Cash on delevery'){
                        afterPaymentSuccess()
                    }
            
            }
        })
        function afterPaymentSuccess() {
    const couponData = document.getElementById('coupondata').textContent.trim();

    fetch('/proceedtoPayment', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            address: userId,
            paymentMethod: paymentMethod,
            totalAmount: totalAmount,
            couponData: couponData
        })
    })
    .then(response => {
        if (response.ok) {
            removeAppliedCoupon();
            return response.json();
        } else {
            throw new Error('Failed to place the order. Please try again later.');
        }
    })
    .then(data => {
        if(data && data.message === 'Out of stock'){
            Swal.fire({
                title: 'Error!',
                html: `<p>The book <strong>${data.product}</strong> is out of stock.</p>`,
                icon: 'error',
                confirmButtonText: 'OK'
            });
        }else if (data && data.message === 'Order placed successfully') {
            Swal.fire({
                title: 'Order Placed!',
                text: 'Your order has been successfully placed.',
                icon: 'success',
                showCancelButton: true,
                showConfirmButton: true,
                cancelButtonText: 'Continue Shopping',
                confirmButtonText: 'View Order'
            }).then((result) => {
                if (result.isConfirmed) {
                    // Send a POST request before redirection if 'coupondata' has content
                    if (couponData) {
                        fetch('/couponCheck', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify({
                                couponData: couponData
                            }),
                        })
                        .then(response => {
                        })
                        .catch(error => {
                            console.error('Error:', error);
                        });
                    }

                    window.location.href = '/account';
                } else if (result.dismiss === Swal.DismissReason.cancel) {
                    if (couponData) {
                        fetch('/couponCheck', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify({
                                couponData: couponData
                                /* include any other necessary data for the POST request */
                            }),
                        })
                        .then(response => {
                            // Handle the response as needed
                        })
                        .catch(error => {
                            // Handle errors if the request fails
                            console.error('Error:', error);
                        });
                    }

                    window.location.href = '/home';
                }
            });
        }
    })
    .catch(error => {
        console.error('Error:', error);
        Swal.fire('Error!', 'Failed to place the order. Please try again later.', 'error');
    });
}



    })
        

            
    
                
            

            // Add a click event listener to the "Place Order" button
            // placeOrderButton.addEventListener('click', function (event) {
            //     event.preventDefault();
            //     const paymentOption = document.querySelector('input[name="payment_option"]:checked').value;

                
                    // Make the fetch request to create a new orderId
                    
                 
              
        




</script>
    
    
    <!--================End Checkout Area =================-->

    <!-- start footer Area -->
    <footer class="footer-area section_gap">
        <div class="container">
            <div class="row">
                <div class="col-lg-3  col-md-6 col-sm-6">
                    <div class="single-footer-widget">
                        <h6>About Us</h6>
                        <p>
                            Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt
                            ut labore dolore
                            magna aliqua.
                        </p>
                    </div>
                </div>
                <div class="col-lg-4  col-md-6 col-sm-6">
                    <div class="single-footer-widget">
                        <h6>Newsletter</h6>
                        <p>Stay update with our latest</p>
                        <div class="" id="mc_embed_signup">

                            <form target="_blank" novalidate="true" action="https://spondonit.us12.list-manage.com/subscribe/post?u=1462626880ade1ac87bd9c93a&amp;id=92a4423d01"
                                method="get" class="form-inline">

                                <div class="d-flex flex-row">

                                    <input class="form-control" name="EMAIL" placeholder="Enter Email" onfocus="this.placeholder = ''"
                                        onblur="this.placeholder = 'Enter Email '" required="" type="email">


                                    <button class="click-btn btn btn-default"><i class="fa fa-long-arrow-right"
                                            aria-hidden="true"></i></button>
                                    <div style="position: absolute; left: -5000px;">
                                        <input name="b_36c4fd991d266f23781ded980_aefe40901a" tabindex="-1" value=""
                                            type="text">
                                    </div>

                                    <!-- <div class="col-lg-4 col-md-4">
													<button class="bb-btn btn"><span class="lnr lnr-arrow-right"></span></button>
												</div>  -->
                                </div>
                                <div class="info"></div>
                            </form>
                        </div>
                    </div>
                </div>
                <div class="col-lg-3  col-md-6 col-sm-6">
                    <div class="single-footer-widget mail-chimp">
                        <h6 class="mb-20">Instragram Feed</h6>
                        <ul class="instafeed d-flex flex-wrap">
                            <li><img src="img/i1.jpg" alt=""></li>
                            <li><img src="img/i2.jpg" alt=""></li>
                            <li><img src="img/i3.jpg" alt=""></li>
                            <li><img src="img/i4.jpg" alt=""></li>
                            <li><img src="img/i5.jpg" alt=""></li>
                            <li><img src="img/i6.jpg" alt=""></li>
                            <li><img src="img/i7.jpg" alt=""></li>
                            <li><img src="img/i8.jpg" alt=""></li>
                        </ul>
                    </div>
                </div>
                <div class="col-lg-2 col-md-6 col-sm-6">
                    <div class="single-footer-widget">
                        <h6>Follow Us</h6>
                        <p>Let us be social</p>
                        <div class="footer-social d-flex align-items-center">
                            <a href="#"><i class="fa fa-facebook"></i></a>
                            <a href="#"><i class="fa fa-twitter"></i></a>
                            <a href="#"><i class="fa fa-dribbble"></i></a>
                            <a href="#"><i class="fa fa-behance"></i></a>
                        </div>
                    </div>
                </div>
            </div>
            <div class="footer-bottom d-flex justify-content-center align-items-center flex-wrap">
                <p class="footer-text m-0"><!-- Link back to Colorlib can't be removed. Template is licensed under CC BY 3.0. -->
Copyright &copy;<script>document.write(new Date().getFullYear());</script> All rights reserved | This template is made with <i class="fa fa-heart-o" aria-hidden="true"></i> by <a href="https://colorlib.com" target="_blank">Colorlib</a>
<!-- Link back to Colorlib can't be removed. Template is licensed under CC BY 3.0. -->
</p>
            </div>
        </div>
    </footer>
    <!-- End footer Area -->


    <script src="js/vendor/jquery-2.2.4.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.11.0/umd/popper.min.js" integrity="sha384-b/U6ypiBEHpOf/4+1nzFpr53nxSS+GLCkfwBdFNTxtclqqenISfwAzpKaMNFNmj4"
        crossorigin="anonymous"></script>
    <script src="js/vendor/bootstrap.min.js"></script>
    <script src="js/jquery.ajaxchimp.min.js"></script>
    <script src="js/jquery.nice-select.min.js"></script>
    <script src="js/jquery.sticky.js"></script>
    <script src="js/nouislider.min.js"></script>
    <script src="js/jquery.magnific-popup.min.js"></script>
    <script src="js/owl.carousel.min.js"></script>
    <!--gmaps Js-->
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCjCGmQ0Uq4exrzdcL6rvxywDDOvfAu6eE"></script>
    <script src="js/gmaps.min.js"></script>
    <script src="js/main.js"></script>
</body>

</html>